{"remainingRequest":"C:\\freshpal\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\freshpal\\frontend\\src\\components\\Home\\Hashtag.vue?vue&type=style&index=0&id=fc45a6a8&scoped=true&lang=css&","dependencies":[{"path":"C:\\freshpal\\frontend\\src\\components\\Home\\Hashtag.vue","mtime":1659190700932},{"path":"C:\\freshpal\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1617757411975},{"path":"C:\\freshpal\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1617757425677},{"path":"C:\\freshpal\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1617757419866},{"path":"C:\\freshpal\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617757409661},{"path":"C:\\freshpal\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1655403882721}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoNCi5ib3JkZXJfdGFnX3BhZ2V7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQouYm9yZGVyX3RhZ19wYWdlOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kOiAjMTExMTExOyAvKiDQptCy0LXRgiDRhNC+0L3QsCAqLw0KICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7DQp9DQoNCi50ZXh0X3RhZ19wYWdlew0KICAgIGZvbnQtc2l6ZTogMTRwdDsNCiAgICBjb2xvcjogI2ZhZmFmYTsNCiAgICBmb250LXdlaWdodDogbGlnaHRlcjsgLyog0KHQstC10YLQu9C+0LUg0L3QsNGH0LXRgNGC0LDQvdC40LUgKi8NCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgcGFkZGluZzogOHB4IDBweCA4cHggMTVweDsNCn0NCg0KLnRleHRfY291bnRfcGFnZXsNCiAgICBmb250LXNpemU6IDE0cHQ7DQogICAgY29sb3I6ICNmYWZhZmE7DQogICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7IC8qINCh0LLQtdGC0LvQvtC1INC90LDRh9C10YDRgtCw0L3QuNC1ICovDQogICAgY3Vyc29yOiBwb2ludGVyOw0KICAgIHBhZGRpbmc6IDhweCAxNXB4IDhweCAwcHg7DQp9DQoNCg=="},{"version":3,"sources":["Hashtag.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkSA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Hashtag.vue","sourceRoot":"src/components/Home","sourcesContent":["<template>\r\n    <div>\r\n        <Header/>\r\n        <div class=\"background_main\">\r\n            <div class=\"center\">\r\n                <div style=\"height: 15px\"></div>\r\n                <div style=\"display: flex;\">\r\n                    <div class=\"left_menu\">\r\n                        <LeftMenu/>\r\n                    </div>\r\n                    <div class=\"home_style\">\r\n                        <div v-if=\"hashtag_exact == null\" style=\"margin-top: 10px\">\r\n                            <div v-for=\"hash in hashtag\">\r\n                                <div style=\"margin-right: 100px; margin-left: 100px\">\r\n                                    <div style=\"display: flex\" v-on:click=\"hashtag_exact_f(hash.hashtag)\" class=\"border_tag_page\">\r\n                                        <span class=\"text_tag_page\">{{hash.hashtag}}</span>\r\n                                        <div style=\"flex-grow: 1;\"></div>\r\n                                        <span class=\"text_count_page\">{{hash.count}}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div v-if=\"hashtag_exact != null\" style=\"margin-bottom: 20px\" class=\"border_st\">\r\n                            <div v-for=\"(mess,index) in hashtag_once\">\r\n                                <div style=\"margin-bottom: 10px; cursor: pointer\" v-on:click=\"status(mess.username__username, mess.id)\">\r\n                                    <div class=\"space-edit\">\r\n                                        <div style=\"display: flex\">\r\n                                            <a class=\"sub_link\" v-on:click.stop=\"go_page(mess.username__username)\"><img v-if=\"mess.username != null\" class=\"img_p\" :src=\"$hostname+'/media/profile/'+mess.username+'/'+mess.username+'.png'\"></a>\r\n                                            <div class=\"username_p\">\r\n                                                <a class=\"sub_link\" v-on:click.stop=\"go_page(mess.username__username)\">{{mess.username__username}}</a>\r\n                                                <span v-if=\"mess.positive_user == true\" class=\"level_publ_style_true\" style=\"margin-left: 10px\">{{mess.level_user}}</span>\r\n                                                <span v-if=\"mess.positive_user == false\" class=\"level_publ_style_false\" style=\"margin-left: 10px\">{{mess.level_user}}</span>\r\n                                                <span> · {{mess.datetime}}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"username_p\" v-if=\"mess.edit==true\">\r\n                                            <span class=\"edit_style\">изменено</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div v-if=\"mess.images.length!=0\">\r\n                                        <div class=\"mt-10 mb-10\" v-on:click.stop=\"\">\r\n                                            <lightbox css=\"h-lg-400\" :items=\"mess.images\" :cells=\"3\"></lightbox>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div v-on:click.stop=\"\" style=\"margin-top: 10px\" class=\"just-line-break\">\r\n                                        <div v-html=\"mess.message\"></div>\r\n                                    </div>\r\n\r\n                                    <div class=\"flex_like_space\">\r\n                                        <div style=\"width: 25px; margin-left: 5px\">\r\n                                            <p v-if=\"mess.positive == true\"><span class=\"level_publ_style_true\">{{mess.level}}</span></p>\r\n                                            <p v-if=\"mess.positive == false\"><span class=\"level_publ_style_false\">{{mess.level}}</span></p>\r\n                                        </div>\r\n                                        <div v-on:click.stop.prevent=\"like(mess.id,index)\" class=\"like_mainpage\" style=\"margin-left: 25px\">\r\n                                            <div v-if=\"mess.sum_like > 0\" style=\"padding-right: 5px\">{{ mess.sum_like | number }}</div>\r\n                                            <img v-if=\"mess.check_like == true\" style=\"margin-top: 1px\" width=\"18\" height=\"18\" :src=\"$hostname+'/media/like_done.svg'\">\r\n                                            <img v-if=\"mess.check_like == null\" style=\"margin-top: 1px\" width=\"18\" height=\"18\" :src=\"$hostname+'/media/like.svg'\">\r\n                                        </div>\r\n                                        <div v-on:click.stop.prevent=\"dislike(mess.id,index)\" class=\"like_mainpage\" style=\"margin-left: 35px\">\r\n                                            <div v-if=\"mess.sum_dislike > 0\" style=\"padding-right: 5px\">{{ mess.sum_dislike | number }}</div>\r\n                                            <img v-if=\"mess.check_dislike == true\" style=\"margin-top: 1px\" width=\"18\" height=\"18\" :src=\"$hostname+'/media/dislike_done.svg'\">\r\n                                            <img v-if=\"mess.check_dislike == null\" style=\"margin-top: 1px\" width=\"18\" height=\"18\" :src=\"$hostname+'/media/dislike.svg'\">\r\n                                        </div>\r\n                                        <div style=\"display: flex; margin-left: 35px\">\r\n                    <!--                        <div style=\"padding-right: 5px\">{{ 0 | number }}</div>-->\r\n                                            <img style=\"margin-top: 1px\" width=\"18\" height=\"18\" :src=\"$hostname+'/media/comment.svg'\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <hr>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"right_menu\">\r\n                        <RighMenu/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div v-observe-visibility=\"handleScrolledToBottom\"></div>\r\n        <div style=\"height: 5px\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from \"axios\";\r\nimport {autoLink} from \"vue-highlights\";\r\nimport moment from \"moment\";\r\n\r\nexport default {\r\n    name: \"HashTag\",\r\n    components: {\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            access_token: localStorage.getItem('access') || null,\r\n            hashtag: [],\r\n            hashtag_once: [],\r\n            hashtag_exact: null,\r\n            last_datetime: null,\r\n            stop_get_subs: 10,\r\n            access: false,\r\n            username: null,\r\n            rating_result:{\r\n                like: null,\r\n                dislike: null,\r\n                level_p: null,\r\n                positive_p: null,\r\n                level_user: null,\r\n                positive_user: null,\r\n            }\r\n        }\r\n    },\r\n    props: {\r\n    },\r\n    methods: {\r\n\r\n        view_update_rating(index){\r\n            for (var i = 0; i < this.hashtag_once.length; i++){\r\n                if (this.hashtag_once[i].username__username == this.rating_result.username){\r\n                    this.hashtag_once[i].level_user = this.rating_result.level_user\r\n                    this.hashtag_once[i].positive_user = this.rating_result.positive_user\r\n                }\r\n            }\r\n            this.hashtag_once[index].level = this.rating_result.level_p\r\n            this.hashtag_once[index].positive = this.rating_result.positive_p\r\n            if (this.rating_result.like == true){\r\n                this.hashtag_once[index].check_like = true\r\n                this.hashtag_once[index].sum_like = this.hashtag_once[index].sum_like + 1\r\n            }\r\n            if (this.rating_result.like == false){\r\n                this.hashtag_once[index].check_like = null\r\n                this.hashtag_once[index].sum_like = this.hashtag_once[index].sum_like - 1\r\n            }\r\n            if (this.rating_result.dislike == true){\r\n                this.hashtag_once[index].check_dislike = true\r\n                this.hashtag_once[index].sum_dislike = this.hashtag_once[index].sum_dislike + 1\r\n            }\r\n            if (this.rating_result.dislike == false){\r\n                this.hashtag_once[index].check_dislike = null\r\n                this.hashtag_once[index].sum_dislike = this.hashtag_once[index].sum_dislike - 1\r\n            }\r\n        },\r\n\r\n        like(id, index){\r\n            if (this.username != this.hashtag_once[index].username__username){\r\n                axios.post(this.$hostname + '/api/mainpage/rating/like/', {\r\n                    id: id\r\n                  },\r\n              {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + this.access_token,\r\n                    }\r\n                })\r\n                  .then(res => {\r\n                      this.rating_result = res.data;\r\n                      this.view_update_rating(index)\r\n                  })\r\n            }\r\n        },\r\n\r\n        dislike(id, index){\r\n            axios.post(this.$hostname + '/api/mainpage/rating/dislike/', {\r\n                id: id\r\n              },\r\n          {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + this.access_token,\r\n                }\r\n            })\r\n              .then(res => {\r\n                this.rating_result = res.data;\r\n                this.view_update_rating(index)\r\n              })\r\n        },\r\n\r\n        go_page(username){\r\n            var url_page = '/' + username;\r\n            this.$router.push(url_page).catch(()=>{});\r\n         },\r\n\r\n        status(username, id){\r\n            var url_page = '/' + username + '/status/' + id;\r\n            this.$router.push(url_page);\r\n        },\r\n\r\n        handleScrolledToBottom(isVisible){\r\n            if (!isVisible)  { return }\r\n            if (this.hashtag_once == null) { return }\r\n            if (this.last_datetime == null) { return }\r\n            this.get_data_from_tag()\r\n        },\r\n\r\n        get_data_from_tag(){\r\n            if (this.stop_get_subs != 0){\r\n                axios.post(this.$hostname + '/api/home/home/get_data_from_tag/', {\r\n                    hashtag: this.hashtag_exact,\r\n                    datetime_request: this.last_datetime,\r\n                  },\r\n              {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + this.access_token,\r\n                    }\r\n                })\r\n                  .then(res => {\r\n                      if (res.data != false){\r\n                          this.stop_get_subs = res.data.length\r\n                          this.last_datetime = res.data[res.data.length-1].datetime\r\n                          for (var i = 0; i < res.data.length; i++){\r\n                                res.data[i].message = autoLink(res.data[i].message)\r\n                                res.data[i].datetime = moment(res.data[i].datetime).format('DD MMMM YY')\r\n                          }\r\n                          this.hashtag_once.push(...res.data);\r\n                      }\r\n                  })\r\n            }\r\n        },\r\n\r\n        check_hashtag_url(){\r\n          var currentLocation = window.location + '';\r\n          const encoded = decodeURI(currentLocation);\r\n          let arr = new Array();\r\n          arr = encoded.split('/')\r\n          if (arr.length > 4){\r\n            this.hashtag_exact = arr[arr.length-1]\r\n          }\r\n\r\n        },\r\n\r\n        hashtag_exact_f(tag){\r\n            var url_page = '/hashtag/' + tag;\r\n            this.$router.push(url_page);\r\n        },\r\n\r\n        get_hashtag(){\r\n            axios.post(this.$hostname + '/api/home/home/get_hashtag_all/', {\r\n\r\n              },\r\n          {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + this.access_token,\r\n                }\r\n            })\r\n              .then(res => {\r\n                  this.hashtag = res.data;\r\n              })\r\n        },\r\n        user_check(){\r\n          axios.post(this.$hostname + '/api/mainpage/user_check/get_username/', {\r\n\r\n          },\r\n      {\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': 'Bearer ' + this.access_token,\r\n\t\t\t}\r\n\t\t})\r\n          .then(res => {\r\n              this.username = res.data.username;\r\n          })\r\n        },\r\n\r\n    },\r\n    created() {\r\n        this.get_hashtag()\r\n        this.check_hashtag_url()\r\n        if (this.hashtag_exact != null){\r\n            this.user_check()\r\n            this.get_data_from_tag()\r\n        }\r\n    },\r\n    filters: {\r\n        number: function(num) {\r\n            if (String(num).length < 5) {\r\n                return Math.floor(num);\r\n            }\r\n            if (String(num).length < 7 && String(num).length > 4) {\r\n                return Math.floor(num/1000) + 'т';\r\n            }\r\n            if (String(num).length < 9 && String(num).length > 6) {\r\n                return Math.floor(num/1000000) + 'м';\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.border_tag_page{\r\n    cursor: pointer;\r\n}\r\n\r\n.border_tag_page:hover {\r\n    background: #111111; /* Цвет фона */\r\n    border-radius: 15px;\r\n}\r\n\r\n.text_tag_page{\r\n    font-size: 14pt;\r\n    color: #fafafa;\r\n    font-weight: lighter; /* Светлое начертание */\r\n    cursor: pointer;\r\n    padding: 8px 0px 8px 15px;\r\n}\r\n\r\n.text_count_page{\r\n    font-size: 14pt;\r\n    color: #fafafa;\r\n    font-weight: lighter; /* Светлое начертание */\r\n    cursor: pointer;\r\n    padding: 8px 15px 8px 0px;\r\n}\r\n\r\n</style>"]}]}