{"remainingRequest":"C:\\backend\\freshpal_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\backend\\freshpal_frontend\\src\\components\\userpage\\Status.vue?vue&type=template&id=0255ccf2&scoped=true&","dependencies":[{"path":"C:\\backend\\freshpal_frontend\\src\\components\\userpage\\Status.vue","mtime":1662497845235},{"path":"C:\\backend\\freshpal_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617757409661},{"path":"C:\\backend\\freshpal_frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1617757425677},{"path":"C:\\backend\\freshpal_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617757409661},{"path":"C:\\backend\\freshpal_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1655403882721}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}