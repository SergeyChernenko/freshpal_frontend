{"remainingRequest":"C:\\freshpal\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\freshpal\\frontend\\src\\components\\startpage\\Authorization.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\freshpal\\frontend\\src\\components\\startpage\\Authorization.vue","mtime":1660144502543},{"path":"C:\\freshpal\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1617757411975},{"path":"C:\\freshpal\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1617757425677},{"path":"C:\\freshpal\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1617757419866},{"path":"C:\\freshpal\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617757409661},{"path":"C:\\freshpal\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1655403882721}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZW1haWxfbWVzX3N0ewogICAgd2lkdGg6IDIzMHB4Cn0KCg=="},{"version":3,"sources":["Authorization.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA;AACA;AACA","file":"Authorization.vue","sourceRoot":"src/components/startpage","sourcesContent":["<template>\r\n  <div style=\"text-align: center\">\r\n    <p class=\"header_start\">Вход</p>\r\n    <div v-if=\"authorization_check == true\">\r\n        <form @submit.prevent=\"login(true)\">\r\n            <p>\r\n              <input class=\"input_style\" id=\"username\" v-model=\"username\" placeholder=\"Имя пользователя\" name=\"username\" required pattern=\"[A-Za-z0-9]+\">\r\n            </p>\r\n            <p>\r\n              <input class=\"input_style\"  id=\"password\" placeholder=\"Пароль\" type=\"password\" v-model=\"password\" name=\"password\" required minlength=\"8\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\">\r\n            </p>\r\n            <p>\r\n                <button class=\"button_style\" type=\"submit\">Войти</button>\r\n            </p>\r\n        </form>\r\n    </div>\r\n\r\n     <div v-if=\"authorization_check == false\">\r\n         <form @submit.prevent=\"get_link()\">\r\n            <p>\r\n              <input class=\"input_style\"  id=\"email\" v-model=\"email\" name=\"email\" required placeholder=\"Почта\">\r\n            </p>\r\n            <p>\r\n                <button class=\"button_style\" type=\"submit\">Восстановить пароль</button>\r\n            </p>\r\n\r\n        </form>\r\n         <p>\r\n                <button class=\"button_style\" v-on:click=\"back_login()\">Назад</button>\r\n         </p>\r\n    </div>\r\n    <div v-if=\"email_mes == true\" class=\"email_mes_st\">\r\n        Если данный e-mail есть в базе, то на него будет отправлено письмо для восстановления пароля.\r\n    </div>\r\n    <div v-if=\"authorization_check == true\">\r\n        <p><a class=\"a_style\" v-on:click=\"authorization_switch(false)\">Забыли пароль?</a></p>\r\n    </div>\r\n    <p style=\"color: #f9185f;\" v-if=\"this.err_pas == true\">\r\n        Неверный логин или пароль.\r\n    </p>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport axios from 'axios'\r\n\r\n\r\nexport default {\r\n  name: 'Authorization',\r\n  components: {\r\n\r\n  },\r\n  data() {\r\n      return{\r\n\r\n          username: null,\r\n          password: null,\r\n          email: null,\r\n          authorization_check: true,\r\n          get_name: null,\r\n          err_pas: false,\r\n          email_mes: false,\r\n          last_activity: {\r\n              count_like: null,\r\n              count_sub: null,\r\n            }\r\n      }\r\n  },\r\n   methods:{\r\n\r\n      get_activity(){\r\n          var access_token = localStorage.getItem('access')\r\n            axios.post(this.$hostname + '/api/home/activity/get_activity/', {\r\n              },\r\n          {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + access_token,\r\n                }\r\n            })\r\n              .then(res => {\r\n                  this.last_activity = res.data\r\n                  this.save_data_activity()\r\n              });\r\n        },\r\n\r\n      save_data_activity(){\r\n        if ( this.last_activity.count_like != 0 || this.last_activity.count_sub != 0 ) {\r\n            this.$store.dispatch('fetchCount',this.last_activity.count_like+this.last_activity.count_sub)\r\n            this.$store.dispatch('fetchLike',this.last_activity.count_like)\r\n            this.$store.dispatch('fetchSub',this.last_activity.count_sub)\r\n        } else {\r\n            setTimeout( this.timeout, 100);\r\n        }\r\n      },\r\n\r\n\r\n      authorization_switch(flag){\r\n          this.authorization_check = flag;\r\n          this.err_pas = false;\r\n      },\r\n      login(flag){\r\n          this.authorization_check = flag;\r\n          axios.post(this.$hostname + '/api/token/', {\r\n            username: this.username,\r\n            password: this.password,\r\n          })\r\n          .then(response => {\r\n              localStorage.setItem('access',response.data.access);\r\n              localStorage.setItem('refresh',response.data.refresh);\r\n\t\t\t  var url_page = '/'+ this.username;\r\n\t\t\t  this.get_activity()\r\n\t\t\t  this.$router.push(url_page)\r\n              this.err_pas = false;\r\n          })\r\n          .catch(err => {\r\n              this.err_pas = true;\r\n              localStorage.removeItem('access');\r\n              localStorage.removeItem('refresh');\r\n          })\r\n      },\r\n      logout(){\r\n          localStorage.removeItem('access');\r\n          localStorage.removeItem('refresh');\r\n          this.get_name = null;\r\n      },\r\n      back_login(){\r\n          this.authorization_check = true;\r\n          this.email_mes = false;\r\n      },\r\n      get_link(){\r\n          this.email_mes = true;\r\n          axios.post(this.$hostname + '/api/startpage/restore_password/get_link/', {\r\n              email: this.email,\r\n          })\r\n              .then(res => {\r\n                  console.log(res)\r\n              })\r\n              .catch(err => console.log(err))\r\n      },\r\n   },\r\n   created() {\r\n   }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n    .email_mes_st{\r\n        width: 230px\r\n    }\r\n\r\n</style>\r\n\r\n"]}]}